package com.coderedrobotics.scouting;

import javax.swing.JOptionPane;

/**
 *
 * @author Michael
 */
public class LookupGUI extends javax.swing.JFrame {

    /**
     * Creates new form LookupPanel
     */
    public LookupGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Team Number Lookup");

        jLabel1.setText("Lookup Team Number:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jScrollPane1.setViewportView(jLabel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(483, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        int number;
        try {
            number = Integer.parseInt(jTextField1.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Please enter a valid team number", "Number Format Exception", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (!Competition.getInstance().teamExists(number)) {
            JOptionPane.showMessageDialog(this, "That team does not exist.", "Lookup Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Team t = Competition.getInstance().getTeam(number);
        String report = "<html><b>REPORT FOR TEAM " + t.getNumber() + ":</b>";
        report += "<br><br><u>Defenses</u>:";
        report += "<br>Portcullis: <b>" + (t.canPortcullis() ? "yes" : "no") + "</b>";
        report += "<br>Chival De Frise: <b>" + (t.canChivalDeFrise() ? "yes" : "no") + "</b>";
        report += "<br>Moat: <b>" + (t.canMoat() ? "yes" : "no") + "</b>";
        report += "<br>Ramparts: <b>" + (t.canRamparts() ? "yes" : "no") + "</b>";
        report += "<br>Drawbridge: <b>" + (t.canDrawBridge() ? "yes" : "no") + "</b>";
        report += "<br>Sally Port: <b>" + (t.canSallyPort() ? "yes" : "no") + "</b>";
        report += "<br>Rock Wall: <b>" + (t.canRockWall() ? "yes" : "no") + "</b>";
        report += "<br>Rough Terrain: <b>" + (t.canRoughTerrain() ? "yes" : "no") + "</b>";
        report += "<br>Low Bar: <b>" + (t.canLowBar() ? "yes" : "no") + "</b>";
        report += "<br><br><u>Tower</u>:";
        report += "<br>Team " + t.getNumber() + " <b>" + (t.canLowGoal() ? "CAN" : "CANNOT") + "</b> complete a low goal.";
        report += "<br>Team " + t.getNumber() + " <b>" + (t.canChallenge() ? "CAN" : "CANNOT") + "</b> challenge the tower.";
        report += "<br>Team " + t.getNumber() + " has a climbing score of <b>" + t.getClimbingScore() + "</b> and a speed of <b>" + t.getClimbingSpeed() + "</b>";
        report += "<br>Team " + t.getNumber() + " has a high goal score of <b>" + t.getHighGoalScore() + "</b>";
        report += "<br><br><u>Autonomous</u>:";
        report += "<br>Team " + t.getNumber() + " <b>" + (t.canAutoReach() ? "CAN" : "CANNOT") + "</b> Reach a defense.";
        report += "<br>Team " + t.getNumber() + " <b>" + (t.canAutoLowGoal() ? "CAN" : "CANNOT") + "</b> shoot a low goal in autonomous.";
        report += "<br>Team " + t.getNumber() + " <b>" + (t.canAutoHighGoal() ? "CAN" : "CANNOT") + "</b> shoot a high goal in autonomous.";
        report += "<br>Portcullis: <b>" + (t.canAutoPortcullis() ? "yes" : "no") + "</b>";
        report += "<br>Chival De Frise: <b>" + (t.canAutoChivalDeFrise() ? "yes" : "no") + "</b>";
        report += "<br>Moat: <b>" + (t.canAutoMoat() ? "yes" : "no") + "</b>";
        report += "<br>Ramparts: <b>" + (t.canAutoRamparts() ? "yes" : "no") + "</b>";
        report += "<br>Drawbridge: <b>" + (t.canAutoDrawbridge() ? "yes" : "no") + "</b>";
        report += "<br>Sally Port: <b>" + (t.canAutoSallyPort() ? "yes" : "no") + "</b>";
        report += "<br>Rock Wall: <b>" + (t.canAutoRockWall() ? "yes" : "no") + "</b>";
        report += "<br>Rough Terrain: <b>" + (t.canAutoRoughTerrain() ? "yes" : "no") + "</b>";
        report += "<br>Low Bar: <b>" + (t.canAutoLowbar() ? "yes" : "no") + "</b>";
        report += "<br><br><u>Additional notes for team " + t.getNumber() + "</u>:";
        report += "<br>" + t.getNotes();
        report += "</html>";
        jLabel2.setText(report);
    }//GEN-LAST:event_jTextField1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
